---
import { apiUrl } from "../lib/constants";
---

<button
  popovertarget="createEvent"
  id="creevent"
  class="max-w-xl mx-auto p-6 bg-[#4d2d45] hover:scale-110 transition-transform rounded-lg shadow-lg
  text-2xl font-semibold flex self-center mb-12"
  >Cr√©er un √©v√©nement</button
>

<div class="rounded" id="createEvent" popover>
  <div class="flex justify-between">
    <h2 class="bg-[#5e3554] text-left flex-1 pl-2 cursor-move mb-1">üñêÔ∏è</h2>
  <button class="text-xl px-2" popovertarget="createEvent">X</button>
  </div>
  
  <form
    id="formPopupCSS"
    class="inset-0 w-full rounded max-w-[900px] mx-auto items-center justify-center z-50 px-5 py-3 transition-opacity"
    hx-post={`${apiUrl}/api/events`}
    {...{ "hx-on::after-request": "htmx.trigger('body', 'refresh')" }}
    hx-target="#form-message"
    hx-swap="innerHTML"
    hx-trigger="submit"
    class="space-y-4"
  >
    <!-- Titre -->
    <div>
      <label for="title" class="block text-sm font-medium"
        >Titre de l'√©v√©nement</label
      >
      <input
        type="text"
        id="title"
        name="title"
        required
        class="bg-[#161215] text-text w-full mt-1 border rounded px-3 py-2"
        placeholder="Titre de l'√©v√©nement"
      />
    </div>

    <!-- Description -->
    <div>
      <label for="description" class="block text-sm font-medium"
        >Description</label
      >
      <textarea
        id="description"
        name="description"
        required
        class="bg-[#161215] text-text w-full mt-1 border rounded px-3 py-2 min-h-72 min-w-72"
        placeholder="Description de l'√©v√©nement"></textarea>
    </div>

    <!-- Nombre de joueurs -->
    <div>
      <label for="players_count" class="block text-sm font-medium"
        >Nombre de joueurs</label
      >
      <input
        type="number"
        id="players_count"
        name="players_count"
        required
        min="2"
        class="bg-[#161215] text-text w-full mt-1 border rounded px-3 py-2"
        placeholder="Nombre de joueurs (minimum 2)"
      />
    </div>

    <!-- Date et heure de d√©but -->
    <div>
      <label for="start_datetime" class="block text-sm font-medium"
        >Date et heure de d√©but</label
      >
      <input
        type="datetime-local"
        id="start_datetime"
        name="start_datetime"
        required
        class="bg-[#161215] text-text w-full mt-1 border rounded px-3 py-2"
      />
    </div>

    <!-- Date et heure de fin -->
    <div>
      <label for="end_datetime" class="block text-sm font-medium"
        >Date et heure de fin</label
      >
      <input
        type="datetime-local"
        id="end_datetime"
        name="end_datetime"
        required
        class="bg-[#161215] text-text w-full mt-1 border rounded px-3 py-2"
      />
    </div>

    <!-- Soumettre -->
    <div>
      <button
        type="submit"
        class="w-full bg-[#5e3554] hover:bg-yellow-600 hover:text-shadow text-white px-4 py-2 mt-10 rounded transition-colors"
      >
        Cr√©er l'√©v√©nement
      </button>
    </div>

    <!-- Message de retour -->
    <div id="form-message" class="text-sm text-center mt-4"></div>
  </form>
</div>
<script>
  const popupMovable = document.getElementById("createEvent") as HTMLElement;
  const header = popupMovable.querySelector("h2") as HTMLElement;
  let isDragging = false;
  let startX = 0;
  let startY = 0;
  let offsetX = 0,
    offsetY = 0;

  header.addEventListener("mousedown", (e) => {
    isDragging = true;
    startX = e.clientX - offsetX;
    startY = e.clientY - offsetY;
    popupMovable.classList.add("grabbing");
  });

  document.addEventListener("mousemove", (e) => {
    if (isDragging) {
      offsetX = e.clientX - startX;
      offsetY = e.clientY - startY;

      // Utilisation de `transform` pour un d√©placement fluide
      popupMovable.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
    }
  });

  document.addEventListener("mouseup", () => {
    isDragging = false;
    popupMovable.classList.remove("grabbing");
  });
</script>
<style>
  #creevent {
    background: linear-gradient(to bottom, #642b56, #6e4262);
  }
  #formPopupCSS {
    background: linear-gradient(to bottom, #251e23, #121012);
  }
  #createEvent {
    @apply bg-[#5e3554] text-text;
  }

  input,
  textarea {
    border: 1px solid #4d2d45; /* Bordure personnalis√©e */
  }

  input[type="datetime-local"]::-webkit-calendar-picker-indicator {
    filter: invert(1); /* Icone blanche */
  }
</style>
