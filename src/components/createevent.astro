---
import { apiUrl } from "../lib/constants";
---

<button
  popovertarget="createEvent"
  class="max-w-xl mx-auto p-6 bg-green-600 hover:bg-green-700 rounded shadow-lg
  text-xl font-semibold flex self-center mb-12"
  >Créer un événement</button
>

<div class="rounded" id="createEvent"
popover
>
  <h2 class="cursor-move">(popup déplaçable)</h2>
  <form
    
    class="inset-0 bg-green-600 w-full rounded max-w-[900px] mx-auto items-center justify-center z-50 p-6"
    x-transition:opacity
    class="rounded-lg w-full max-w-2xl"
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0 scale-90"
    x-transition:enter-end="opacity-100 scale-100"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-100 scale-100"
    x-transition:leave-end="opacity-0 scale-90"
    hx-post={`${apiUrl}/api/events/create`}
    hx-target="#form-message"
    hx-swap="innerHTML"
    class="space-y-4"
    
  >
    <!-- Titre -->
    <div>
      <label for="title" class="block text-sm font-medium"
        >Titre de l'événement</label
      >
      <input
        type="text"
        id="title"
        name="title"
        required
        class="w-full mt-1 border border-gray-300 rounded px-3 py-2 focus:ring focus:ring-blue-300"
        placeholder="Titre de l'événement"
      />
    </div>

    <!-- Description -->
    <div>
      <label for="description" class="block text-sm font-medium"
        >Description</label
      >
      <textarea
        id="description"
        name="description"
        required
        class="w-full mt-1 border border-gray-300 rounded px-3 py-2 focus:ring focus:ring-blue-300 min-h-72 min-w-72"
        placeholder="Description de l'événement"></textarea>
    </div>

    <!-- Nombre de joueurs -->
    <div>
      <label for="players_count" class="block text-sm font-medium"
        >Nombre de joueurs</label
      >
      <input
        type="number"
        id="players_count"
        name="players_count"
        required
        min="2"
        class="w-full mt-1 border border-gray-300 rounded px-3 py-2 focus:ring focus:ring-blue-300"
        placeholder="Nombre de joueurs (minimum 2)"
      />
    </div>

    <!-- Date et heure de début -->
    <div>
      <label for="start_datetime" class="block text-sm font-medium"
        >Date et heure de début</label
      >
      <input
        type="datetime-local"
        id="start_datetime"
        name="start_datetime"
        required
        class="w-full mt-1 border border-gray-300 rounded px-3 py-2 focus:ring focus:ring-blue-300"
      />
    </div>

    <!-- Date et heure de fin -->
    <div>
      <label for="end_datetime" class="block text-sm font-medium"
        >Date et heure de fin</label
      >
      <input
        type="datetime-local"
        id="end_datetime"
        name="end_datetime"
        required
        class="w-full mt-1 border border-gray-300 rounded px-3 py-2 focus:ring focus:ring-blue-300"
      />
    </div>

    <!-- Soumettre -->
    <div>
      <button
        type="submit"
        class="w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
      >
        Créer l'événement
      </button>
    </div>

    <!-- Message de retour -->
    <div id="form-message" class="text-sm text-center mt-4"></div>
  </form>
</div>
<script>
  const popupMovable = document.getElementById('createEvent') as HTMLElement;
  const header = popupMovable.querySelector('h2') as HTMLElement
  let isDragging = false;
  let startX = 0;
  let startY = 0;
  let offsetX = 0, offsetY = 0;

  header.addEventListener('mousedown', (e) => {
      isDragging = true;
      startX = e.clientX - offsetX;
      startY = e.clientY - offsetY;
      popupMovable.classList.add('grabbing');
  });

  document.addEventListener('mousemove', (e) => {
      if (isDragging) {
          offsetX = e.clientX - startX;
          offsetY = e.clientY - startY;

          // Utilisation de `transform` pour un déplacement fluide
          popupMovable.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
      }
  });

  document.addEventListener('mouseup', () => {
      isDragging = false;
      popupMovable.classList.remove('grabbing');
  });
</script>