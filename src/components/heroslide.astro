<style>
    .slider-container {
      position: relative;
      width: 99%;
      height: 600px;
      max-width: 900px;
      overflow: hidden;
      margin-inline: auto;
    }
  
    .slide {
      position: absolute;
      inset: 0;
      background-size: cover;
      background-position: center;
      opacity: 0;
      transition: opacity 1.5s ease-in-out;
    }
  
    .slide-active {
      opacity: 1;
    }
  </style>
  
  <div x-data="heroSlider()" x-init="startAutoSlide()" @mouseenter="stopAutoSlide()" @mouseleave="startAutoSlide()" class="slider-container">
    <template x-for="(slide, index) in slides" :key="index">
      <div
        :class="currentSlide === index ? 'slide slide-active' : 'slide'"
        :style="`background-image: url(${slide});`"
      >
      </div>
    </template>
  </div>
  
  <script is:inline>
    function heroSlider() {
      return {
        slides: [
          "src/img/hero4.png",
          "src/img/hero3.png",
          "src/img/hero5.png",
          "src/img/hero2.png",
          "src/img/hero1.png",
        ],
        currentSlide: 0,
        interval: null,
        startAutoSlide() {
          this.interval = setInterval(() => {
            this.nextSlide();
          }, 5000); // Vitesse de d√©filement
        },
        nextSlide() {
          this.currentSlide = (this.currentSlide + 1) % this.slides.length;
        },
        stopAutoSlide() {
          clearInterval(this.interval);
        },
      };
    }
  </script>
  