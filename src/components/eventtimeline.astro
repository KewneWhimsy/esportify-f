---
import { apiUrl } from "../lib/constants";
export interface Props {
  apiEndPoint: string;
  color : string;
  colorHover : string;
}

const { apiEndPoint, color, colorHover } = Astro.props;
---

<section class="mb-12">
  <div class="flex flex-col space-y-4 ml-4">
    <div class="flex gap-3 my-2">
      <button
        hx-get={`${apiUrl}/api/${apiEndPoint}?sort=players_count`}
        hx-target={`#${apiEndPoint}Container`}
        hx-swap="innerHTML"
        hx-on-error="this.innerHTML = 'Erreur lors du tri des événements';"
        class={`px-2 py-1 transition-colors rounded ${color ? `bg-${color}` : ''} ${colorHover ? `hover:bg-${colorHover}` : ''}`}
      >
        <p class="text-sm">Trier par joueurs</p>
      </button>
      <button
        hx-get={`${apiUrl}/api/${apiEndPoint}?sort=start_datetime`}
        hx-target={`#${apiEndPoint}Container`}
        hx-swap="innerHTML"
        hx-on-error="this.innerHTML = 'Erreur lors du tri des événements';"
        class={`px-2 py-1 transition-colors rounded ${color ? `bg-${color}` : ''} ${colorHover ? `hover:bg-${colorHover}` : ''}`}
      >
        <p class="text-sm">Trier par date</p>
      </button>
      <button
        hx-get={`${apiUrl}/api/${apiEndPoint}?sort=organisateur`}
        hx-target={`#${apiEndPoint}Container`}
        hx-swap="innerHTML"
        hx-on-error="this.innerHTML = 'Erreur lors du tri des événements';"
        class={`px-2 py-1 transition-colors rounded ${color ? `bg-${color}` : ''} ${colorHover ? `hover:bg-${colorHover}` : ''}`}
      >
        <p class="text-sm">Trier par organisateur</p>
      </button>
    </div>
  </div>
  <div class="flex justify-center">
    <div class="w-full max-w-4xl overflow-x-auto rounded-lg shadow-lg m-4">
      <!-- Bande horizontale des événements -->
      <div
        id={`${apiEndPoint}Container`}
        class="flex space-x-4 p-4 bg-[#161215] overflow-x-scroll rounded-lg"
      >
        <!-- Les événements seront chargés dynamiquement ici via HTMX -->
        <p class="p-4 rounded-lg w-full text-center">
          Chargement des événements...
          <br/>(Peut prendre jusqu'à 50s si le serveur est en veille)
        </p>
      </div>

      <!-- Bloc pour charger les événements -->
      <divevents-container
        hx-get={`${apiUrl}/api/${apiEndPoint}`}
        hx-target={`#${apiEndPoint}Container`}
        hx-trigger="load"
        hx-swap="innerHTML"
        hx-on-error="this.innerHTML = 'Erreur lors du chargement des événements';"
      >
        <!-- 
    Fait une requête GET à l'URL spécifiée, 
    Spécifie où insérer la réponse (id= "events-container"),
    Déclenche la requête automatiquement lors du chargement de la page, 
    Insère le contenu récupéré à la fin de l'élément cible 
    -->
      </divevents-container>
    </div>
  </div>
  
</section>